<?xml version="1.0" encoding="UTF-8"?><chapter id="chap_JBossWS-CXFJMStransporttutorial"><title>JBossWS-CXFJMStransporttutorial</title><para>JBossWS-CXF supports JMS Transport to transfer SOAP messages. There is a testcase in the codebase to demonstrate this ability, available <ulink url="http://anonsvn.jboss.org/repos/jbossws/stack/cxf/tags/jbossws-cxf-3.4.0.CR2/modules/testsuite/cxf-spring-tests/src/test/java/org/jboss/test/ws/jaxws/samples/jmstransport/">here</ulink>. In this tutorial, we will use a wsdl first web service example to show you how to enable this feature in JBossWS.</para><para> </para><para/><section id="JBossWS-CXFJMStransporttutorial_WSDL"><title>WSDL</title><screen xml:space="preserve">
&lt;wsdl:definitions name="OrganizationJMSEndpointService" targetNamespace="<ulink url="http://org.jboss.ws/samples/jmstransport">http://org.jboss.ws/samples/jmstransport</ulink>" xmlns:jms="<ulink url="http://cxf.apache.org/transports/jms">http://cxf.apache.org/transports/jms</ulink>" xmlns:ns1="<ulink url="http://schemas.xmlsoap.org/wsdl/soap/http">http://schemas.xmlsoap.org/wsdl/soap/http</ulink>" xmlns:soap="<ulink url="http://schemas.xmlsoap.org/wsdl/soap/">http://schemas.xmlsoap.org/wsdl/soap/</ulink>" xmlns:tns="<ulink url="http://org.jboss.ws/samples/jmstransport">http://org.jboss.ws/samples/jmstransport</ulink>" xmlns:wsdl="<ulink url="http://schemas.xmlsoap.org/wsdl/">http://schemas.xmlsoap.org/wsdl/</ulink>" xmlns:xsd="<ulink url="http://www.w3.org/2001/XMLSchema">http://www.w3.org/2001/XMLSchema</ulink>"&gt;
  &lt;wsdl:message name="getContactInfoResponse"&gt;
    &lt;wsdl:part name="return" type="xsd:string"&gt;
    &lt;/wsdl:part&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:message name="getContactInfo"&gt;
    &lt;wsdl:part name="arg0" type="xsd:string"&gt;
    &lt;/wsdl:part&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:portType name="Organization"&gt;
    &lt;wsdl:operation name="getContactInfo"&gt;
      &lt;wsdl:input message="tns:getContactInfo" name="getContactInfo"&gt;
    &lt;/wsdl:input&gt;
      &lt;wsdl:output message="tns:getContactInfoResponse" name="getContactInfoResponse"&gt;
    &lt;/wsdl:output&gt;
    &lt;/wsdl:operation&gt;
  &lt;/wsdl:portType&gt;
  &lt;wsdl:binding name="HTTPSoapBinding" type="tns:Organization"&gt;
    &lt;soap:binding style="rpc" transport="<ulink url="http://schemas.xmlsoap.org/soap/http">http://schemas.xmlsoap.org/soap/http</ulink>"/&gt;
    &lt;wsdl:operation name="getContactInfo"&gt;
      &lt;soap:operation soapAction="" style="rpc"/&gt;
      &lt;wsdl:input name="getContactInfo"&gt;
        &lt;soap:body namespace="<ulink url="http://org.jboss.ws/samples/jmstransport">http://org.jboss.ws/samples/jmstransport</ulink>" use="literal"/&gt;
      &lt;/wsdl:input&gt;
      &lt;wsdl:output name="getContactInfoResponse"&gt;
        &lt;soap:body namespace="<ulink url="http://org.jboss.ws/samples/jmstransport">http://org.jboss.ws/samples/jmstransport</ulink>" use="literal"/&gt;
      &lt;/wsdl:output&gt;
    &lt;/wsdl:operation&gt;
  &lt;/wsdl:binding&gt;

  &lt;wsdl:binding name="JMSSoapBinding" type="tns:Organization"&gt;
    &lt;soap:binding style="rpc" transport="<ulink url="http://cxf.apache.org/transports/jms">http://cxf.apache.org/transports/jms</ulink>"/&gt;
    &lt;wsdl:operation name="getContactInfo"&gt;
      &lt;soap:operation soapAction="" style="rpc"/&gt;
      &lt;wsdl:input name="getContactInfo"&gt;
        &lt;soap:body namespace="<ulink url="http://org.jboss.ws/samples/jmstransport">http://org.jboss.ws/samples/jmstransport</ulink>" use="literal"/&gt;
      &lt;/wsdl:input&gt;
      &lt;wsdl:output name="getContactInfoResponse"&gt;
        &lt;soap:body namespace="<ulink url="http://org.jboss.ws/samples/jmstransport">http://org.jboss.ws/samples/jmstransport</ulink>" use="literal"/&gt;
      &lt;/wsdl:output&gt;
    &lt;/wsdl:operation&gt;
  &lt;/wsdl:binding&gt;


  &lt;wsdl:service name="OrganizationService"&gt;
    &lt;wsdl:port binding='tns:HTTPSoapBinding' name='HttpEndpointPort'&gt;
      &lt;soap:address location='<ulink url="http://@jboss.bind.address@:8080/jaxws-samples-jmstransport'/">http://@jboss.bind.address@:8080/jaxws-samples-jmstransport'/</ulink>&gt;
    &lt;/wsdl:port&gt;
    &lt;wsdl:port binding="tns:JMSSoapBinding" name="JmsEndpointPort"&gt;
           &lt;jms:address
                   destinationStyle="queue"
                   jndiConnectionFactoryName="ConnectionFactory" 
                   jndiDestinationName="queue/RequestQueue"
                   jndiReplyDestinationName="queue/ResponseQueue"&gt;
                   &gt;                   
                &lt;/jms:address&gt;    
        &lt;/wsdl:port&gt;
  &lt;/wsdl:service&gt;
&lt;/wsdl:definitions&gt;</screen><para> </para><para>Apache CXF defines the jms wsdl extension, so the jms queue name or other information about jms in wsdl port can be parsed to send or receive jms message. Check this wiki page to see what jms attributes you can defined in WSDL.  In this wsdl, we define two queues to send and receive the soap message. CXF uses JNDI to look up the jms ConnectionFactory, so we may also need to provide the JNDI properties as the following example :</para><para> </para><screen xml:space="preserve">&lt;jms:address
    destinationStyle="queue"
    jndiConnectionFactoryName="ConnectionFactory" 
    jndiDestinationName="queue/RequestQueue"
    jndiReplyDestinationName="queue/ResponseQueue"
    &gt;
    &lt;jms:JMSNamingProperty name="java.naming.factory.initial"
                           value="org.jnp.interfaces.NamingContextFactory"/&gt;
    &lt;jms:JMSNamingProperty name="java.naming.provider.url"
                           value="jnp://localhost:1099"/&gt;
&lt;/jms:address&gt;</screen><para> </para></section>
<section id="JBossWS-CXFJMStransporttutorial_Service_Implementation"><title>Service Implementation</title><para> </para><para>After generated code from this wsdl , we wrote two class to implement this interface for this two ports . We annotate the portName in annotation to tell web service stack which transport this service uses :</para><para> </para><screen xml:space="preserve">@WebService (serviceName="OrganizationService", portName="HttpEndpointPort",wsdlLocation = "WEB-INF/wsdl/jmstransport.wsdl",targetNamespace = "http://org.jboss.ws/samples/jmstransport", endpointInterface="org.jboss.test.ws.jaxws.samples.jmstransport.Organization")
@SOAPBinding(style = SOAPBinding.Style.RPC)
 
<emphasis role="bold">public</emphasis> <emphasis role="bold">class</emphasis> OrganizationHttpEndpoint <emphasis role="bold">implements</emphasis> Organization
{ 
   @WebMethod
   <emphasis role="bold">public</emphasis> String getContactInfo(String organization)
   {
      <emphasis role="bold">return</emphasis> "The '" + organization + "' boss is currently out of office, please call again.";
   }
}
 
 
 
 
</screen><para> </para><para> </para><para> </para><screen xml:space="preserve">@WebService (serviceName="OrganizationService",portName="JmsEndpointPort", wsdlLocation = "WEB-INF/wsdl/jmstransport.wsdl", targetNamespace = "http://org.jboss.ws/samples/jmstransport", endpointInterface="org.jboss.test.ws.jaxws.samples.jmstransport.Organization")
@SOAPBinding(style = SOAPBinding.Style.RPC)
 
<emphasis role="bold">public</emphasis> <emphasis role="bold">class</emphasis> OrganizationJmsEndpoint <emphasis role="bold">implements</emphasis> Organization
{ 
   @WebMethod
   <emphasis role="bold">public</emphasis> String getContactInfo(String organization)
   {
      <emphasis role="bold">return</emphasis> "The '" + organization + "' boss is currently out of office, please call again.";
   }
}
 
 
 
 
</screen><para> </para></section>
<section id="JBossWS-CXFJMStransporttutorial_webxml"><title>web.xml</title><para> </para><screen xml:space="preserve">&lt;web-app xmlns="<ulink url="http://java.sun.com/xml/ns/j2ee">http://java.sun.com/xml/ns/j2ee</ulink>"
  xmlns:xsi="<ulink url="http://www.w3.org/2001/XMLSchema-instance">http://www.w3.org/2001/XMLSchema-instance</ulink>"
  xsi:schemaLocation="<ulink url="http://java.sun.com/xml/ns/j2ee">http://java.sun.com/xml/ns/j2ee</ulink> <ulink url="http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd</ulink>"
  version="2.4"&gt;

  &lt;servlet&gt;
    &lt;servlet-name&gt;OrganizationService&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.jboss.test.ws.jaxws.samples.jmstransport.OrganizationHttpEndpoint&lt;/servlet-class&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
  &lt;/servlet&gt;

  &lt;servlet-mapping&gt;
    &lt;servlet-name&gt;OrganizationService&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
  &lt;/servlet-mapping&gt;&lt;/web-app&gt;</screen><para> </para><para>It is almost the same as the usual web.xml to deploy a web service except the &lt;load-on-startup&gt; servlet initializeparameter. This is for jms service start ready when deployment, no need to wait until the first servlet request to start the jms endpoint.</para><para> </para></section>
<section id="JBossWS-CXFJMStransporttutorial_jbosswscxfxml"><title>jbossws-cxf.xml</title><para>In addition to web.xml,  the jbossws-cxf.xml is needed to actually pass in cxf to start this two port.</para><para> </para><screen xml:space="preserve">&lt;beans xmlns='<ulink url="http://www.springframework.org/schema/beans">http://www.springframework.org/schema/beans</ulink>'
    xmlns:xsi='<ulink url="http://www.w3.org/2001/XMLSchema-instance">http://www.w3.org/2001/XMLSchema-instance</ulink>' xmlns:beans='<ulink url="http://www.springframework.org/schema/beans">http://www.springframework.org/schema/beans</ulink>'
        xmlns:jms="<ulink url="http://cxf.apache.org/transports/jms">http://cxf.apache.org/transports/jms</ulink>"
    xmlns:jaxws='<ulink url="http://cxf.apache.org/jaxws">http://cxf.apache.org/jaxws</ulink>'
    xsi:schemaLocation='<ulink url="http://www.springframework.org/schema/beans">http://www.springframework.org/schema/beans</ulink> <ulink url="http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">http://www.springframework.org/schema/beans/spring-beans-2.0.xsd</ulink>
  <ulink url="http://www.w3.org/2006/07/ws-policy">http://www.w3.org/2006/07/ws-policy</ulink> <ulink url="http://www.w3.org/2006/07/ws-policy.xsd">http://www.w3.org/2006/07/ws-policy.xsd</ulink> 
  <ulink url="http://cxf.apache.org/jaxws">http://cxf.apache.org/jaxws</ulink> <ulink url="http://cxf.apache.org/schemas/jaxws.xsd">http://cxf.apache.org/schemas/jaxws.xsd</ulink>
  <ulink url="http://cxf.apache.org/transports/jms">http://cxf.apache.org/transports/jms</ulink> <ulink url="http://cxf.apache.org/schemas/configuration/jms.xsd">http://cxf.apache.org/schemas/configuration/jms.xsd</ulink>'&gt;

        &lt;import resource="classpath:META-INF/cxf/cxf-extension-jms.xml"/&gt;    
    &lt;jaxws:endpoint id='SOAPQueryService'
        implementor='org.jboss.test.ws.jaxws.samples.jmstransport.OrganizationHttpEndpoint'
                &gt;
        &lt;jaxws:invoker&gt;
            &lt;bean class='org.jboss.wsf.stack.cxf.InvokerJSE'/&gt;
        &lt;/jaxws:invoker&gt;
    &lt;/jaxws:endpoint&gt;

    &lt;jaxws:endpoint id='JMSQueryService'
        implementor='org.jboss.test.ws.jaxws.samples.jmstransport.OrganizationJmsEndpoint'
                transportId="<ulink url="http://cxf.apache.org/transports/jms">http://cxf.apache.org/transports/jms</ulink>"&gt;
    &lt;/jaxws:endpoint&gt;
&lt;/beans&gt;</screen><para> </para><para><emphasis role="bold">Note: </emphasis>the import resource is the JmsTransportFactory configuration . It is required to jms transport enablement .</para><para> </para><para>Below gives the war file directory structure to make it more clear what inside :</para><screen xml:space="preserve">
|-- jmstransport-sample.war 
`-- WEB-INF
    |-- classes
    |   `-- org
    |       `-- jboss
    |           `-- test
    |               `-- ws
    |                   `-- jaxws
    |                       `-- samples
    |                           `-- jmstransport
    |                               |-- JMSTransportTestCase$ResponseListener.class
    |                               |-- JMSTransportTestCase.class
    |                               |-- Organization.class
    |                               |-- OrganizationHttpEndpoint.class
    |                               `-- OrganizationJmsEndpoint.class
    |-- jboss-web.xml
    |-- jbossws-cxf.xml
    |-- web.xml
    `-- wsdl
        `-- jmstransport.wsdl</screen></section>
</chapter>