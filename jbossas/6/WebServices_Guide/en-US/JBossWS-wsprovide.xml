<?xml version="1.0" encoding="UTF-8"?><chapter id="chap_JBossWS-wsprovide"><title>JBossWS-wsprovide</title><para>wsprovide is a command line tool and ant task that generates portable JAX-WS artifacts for a service endpoint implementation. It also has the option to "provide" the abstract  contract for offline usage. See <ulink url="http://community.jboss.org/docs/DOC-13544#BottomUp_Using_wsprovide">"Using wsprovide"</ulink> for a detailed walk-through.</para><para/><section id="JBossWS-wsprovide_Command_Line_Tool"><title>Command Line Tool</title><para>The command line tool has the following usage:</para><screen xml:space="preserve">  usage: wsprovide [options] &lt;endpoint class name&gt;
  options: 
  -h, --help                  Show this help message
  -k, --keep                  Keep/Generate Java source
  -w, --wsdl                  Enable WSDL file generation
  -c. --classpath=&lt;path&lt;      The classpath that contains the endpoint
  -o, --output=&lt;directory&gt;    The directory to put generated artifacts
  -r, --resource=&lt;directory&gt;  The directory to put resource artifacts
  -s, --source=&lt;directory&gt;    The directory to put Java source
  -e, --extension             Enable SOAP 1.2 binding extension
  -q, --quiet                 Be somewhat more quiet
  -t, --show-traces           Show full exception stack traces</screen><section id="JBossWS-wsprovide_Examples"><title>Examples</title><para>Generating wrapper classes for portable artifacts in the "generated" directory:</para><screen xml:space="preserve">wsprovide -o generated foo.Endpoint
</screen><para>Generating wrapper classes and WSDL in the "generated" directory</para><screen xml:space="preserve">wsprovide -o generated -w foo.Endpoint
</screen><para>Using an endpoint that references other jars</para><screen xml:space="preserve">wsprovide -o generated -c application1.jar:application2.jar foo.Endpoint</screen></section>
</section>
<section id="JBossWS-wsprovide_Maven_Plugin"><title>Maven Plugin</title><para>The wsprovide tools is included in the <emphasis role="bold">org.jboss.ws.plugins:maven-jaxws-tools-plugin</emphasis> plugin. The plugin has two goals for running the tool, <emphasis>wsprovide</emphasis> and <emphasis>wsprovide-test</emphasis>, which basically do the same during different maven build phases (the former triggers the sources generation during <emphasis>process-classes</emphasis> phase, the latter during the <emphasis>process-test-classes</emphasis> one).</para><para>The wsprovide plugin has the following parameters:</para><informaltable><tgroup cols="3"><colspec colnum="1" colname="col1"/><colspec colnum="2" colname="col2"/><colspec colnum="3" colname="col3"/><thead><row><entry> Attribute </entry><entry> Description </entry><entry> Default </entry></row></thead><tbody><row><entry>testClasspathElements</entry><entry><para>Each classpathElement provides a</para><para>library file to be added to classpath</para></entry><entry><para>${project.compileClasspathElements}</para><para>or</para><para>${project.testClasspathElements}</para></entry></row><row><entry>outputDirectory</entry><entry>The output directory for generated artifacts.</entry><entry><para>${project.build.outputDirectory}</para><para>or</para><para>${project.build.testOutputDirectory}</para></entry></row><row><entry>resourceDirectory</entry><entry>The output directory for resource artifacts (WSDL/XSD).</entry><entry>${project.build.directory}/wsprovide/resources</entry></row><row><entry>sourceDirectory</entry><entry>The output directory for Java source.</entry><entry>${project.build.directory}/wsprovide/java</entry></row><row><entry>extension</entry><entry>Enable SOAP 1.2 binding extension.</entry><entry>false</entry></row><row><entry>generateWsdl</entry><entry>Whether or not to generate WSDL.</entry><entry>false</entry></row><row><entry>verbose</entry><entry>Enables more informational output about command progress.</entry><entry>false</entry></row><row><entry><emphasis role="bold">endpointClass</emphasis></entry><entry><emphasis role="bold">Service Endpoint Implementation.</emphasis></entry></row></tbody></tgroup></informaltable><section id="JBossWS-wsprovide_Examples_365594"><title>Examples</title><para>You can use wsprovide in your own project build simply referencing the <emphasis>maven-jaxws-tools-plugin</emphasis> in the configured plugins in your pom.xml file.</para><para>The following example makes the plugin provide the wsdl file and artifact sources for the specified endpoint class:</para><screen xml:space="preserve">&lt;build&gt;
  &lt;plugins&gt;
    &lt;plugin&gt;
      &lt;groupId&gt;org.jboss.ws.plugins&lt;/groupId&gt;
      &lt;artifactId&gt;maven-jaxws-tools-plugin&lt;/artifactId&gt;
      &lt;version&gt;@pom.version@&lt;/version&gt;
      &lt;configuration&gt;
        &lt;verbose&gt;true&lt;/verbose&gt;
        &lt;endpointClass&gt;org.jboss.test.ws.plugins.tools.wsprovide.TestEndpoint&lt;/endpointClass&gt;
        &lt;generateWsdl&gt;true&lt;/generateWsdl&gt;
      &lt;/configuration&gt;
      &lt;executions&gt;
        &lt;execution&gt;
          &lt;goals&gt;
            &lt;goal&gt;wsprovide&lt;/goal&gt;
          &lt;/goals&gt;
        &lt;/execution&gt;
      &lt;/executions&gt;
    &lt;/plugin&gt;
  &lt;/plugins&gt;
&lt;/build&gt;
</screen><para> </para><para>The following example does the same, but is meant for use in your own testsuite:</para><screen xml:space="preserve">&lt;build&gt;
  &lt;plugins&gt;
    &lt;plugin&gt;
      &lt;groupId&gt;org.jboss.ws.plugins&lt;/groupId&gt;
      &lt;artifactId&gt;maven-jaxws-tools-plugin&lt;/artifactId&gt;
      &lt;version&gt;@pom.version@&lt;/version&gt;
      &lt;configuration&gt;
        &lt;verbose&gt;true&lt;/verbose&gt;
        &lt;endpointClass&gt;org.jboss.test.ws.plugins.tools.wsprovide.TestEndpoint2&lt;/endpointClass&gt;
        &lt;generateWsdl&gt;true&lt;/generateWsdl&gt;
      &lt;/configuration&gt;
      &lt;executions&gt;
        &lt;execution&gt;
          &lt;goals&gt;
            &lt;goal&gt;wsprovide-test&lt;/goal&gt;
          &lt;/goals&gt;
        &lt;/execution&gt;
      &lt;/executions&gt;
    &lt;/plugin&gt;
  &lt;/plugins&gt;
&lt;/build&gt;
</screen><para> </para></section>
</section>
<section id="JBossWS-wsprovide_Ant_Task"><title>Ant Task</title><note><para><para><emphasis><emphasis role="bold">Note</emphasis></emphasis></para><para><emphasis>With 2.0.GA the task was renamed to org.jboss.wsf.spi.tools.ant.WSProvideTask</emphasis></para></para></note><para>The wsprovide ant task has the following attributes:</para><informaltable><tgroup cols="3"><colspec colnum="1" colname="col1"/><colspec colnum="2" colname="col2"/><colspec colnum="3" colname="col3"/><thead><row><entry> Attribute </entry><entry> Description </entry><entry> Default </entry></row></thead><tbody><row><entry>fork</entry><entry>Whether or not to run the generation task in a separate VM.</entry><entry>true</entry></row><row><entry>keep</entry><entry>Keep/Enable Java source code generation.</entry><entry>false</entry></row><row><entry>destdir</entry><entry>The output directory for generated artifacts.</entry><entry>"output"</entry></row><row><entry>resourcedestdir</entry><entry>The output directory for resource artifacts (WSDL/XSD).</entry><entry>value of destdir</entry></row><row><entry>sourcedestdir</entry><entry>The output directory for Java source.</entry><entry>value of destdir</entry></row><row><entry>extension</entry><entry>Enable SOAP 1.2 binding extension.</entry><entry>false</entry></row><row><entry>genwsdl</entry><entry>Whether or not to generate WSDL.</entry><entry>false</entry></row><row><entry>verbose</entry><entry>Enables more informational output about command progress.</entry><entry>false</entry></row><row><entry><emphasis role="bold">sei</emphasis></entry><entry><emphasis role="bold">Service Endpoint Implementation.</emphasis></entry></row><row><entry>classpath</entry><entry>The classpath that contains the service endpoint implementation.</entry><entry>"."</entry></row></tbody></tgroup></informaltable><section id="JBossWS-wsprovide_Examples_24298"><title>Examples</title><para>Executing wsprovide in verbose mode with separate output directories for source, resources, and classes:</para><screen xml:space="preserve">&lt;target name="test-wsproivde" depends="init"&gt;
  &lt;taskdef name="wsprovide" classname="org.jboss.wsf.spi.tools.ant.WSProvideTask"&gt;
    &lt;classpath refid="core.classpath"/&gt;
  &lt;/taskdef&gt;
  &lt;wsprovide
    fork="false"
    keep="true"
    destdir="out"
    resourcedestdir="out-resource"
    sourcedestdir="out-source"
    genwsdl="true" 
    verbose="true"
    sei="org.jboss.test.ws.jaxws.jsr181.soapbinding.DocWrappedServiceImpl"&gt;
    &lt;classpath&gt;
      &lt;pathelement path="${tests.output.dir}/classes"/&gt;
    &lt;/classpath&gt;
  &lt;/wsprovide&gt;
&lt;/target&gt;
</screen></section>
</section></chapter>