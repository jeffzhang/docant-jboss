<?xml version="1.0" encoding="UTF-8"?><chapter id="chap_JBossWS-Fromconceptstotechnology"><title>JBossWS-Fromconceptstotechnology</title><para>This pages is meant to be something like a bridge from the very high level web service concepts highlighted <link linkend="chap_JBossWS-WebServices">here</link> and the most important specifications the web service technology platform is based on.</para><para/><section id="JBossWS-Fromconceptstotechnology_Service_contracts"><title>Service contracts</title><para>Contracts carry technical constraints and requirements of the exposed service as well as information about data to be exchange to interact with the service. They comprise technical descriptions and optional non-technical documents. The latter might include human readable description of the service and the business process it is part of as well as service level agreement / quality of provided service information.</para><para> </para><section id="JBossWS-Fromconceptstotechnology_Technical_description"><title>Technical description</title><para>Service description is mainly provided using the standard <ulink url="http://www.w3.org/TR/wsdl">Web Service Description Language (WSDL)</ulink>. Practically speaking this means one or more XML files containing information including the service location (<emphasis>endpoint address</emphasis>), the service functionalities (<emphasis>operations</emphasis>), the input/output messages involved in the communication and the business data structure. The latter is basically one or more <ulink url="http://www.w3.org/TR/xmlschema-0/">XML Schema definition</ulink>. Moreover recent specifications (like <ulink url="http://schemas.xmlsoap.org/ws/2004/09/policy/">WS-Policy</ulink>) allow for more advanced service capabilities to be stated in the contract through WSDL extensions.</para><para> </para><para>Web service stacks like JBossWS usually have tools to both generate and consume technical contracts. This helps ensuring also from a practical point of view that owners of service producer (<emphasis>server</emphasis>) and consumer (<emphasis>client</emphasis>) only need contracts to establish the communication.</para><para> </para></section>
<section id="JBossWS-Fromconceptstotechnology_Contract_delivery_process"><title>Contract delivery process</title><para>One of the main concerns about service contracts is the way they're obtained.</para><variablelist/><para>As previously said, tools allow developers to automatically generate WSDL contract files given their service implementation. Advantages and disadvantage of this delivery process include:</para><itemizedlist><listitem><para> Developers do not have to deal with contracts by hand thus deep knowledge of WSDL and XML is not required. </para></listitem><listitem><para> Less effort and time required for services to be developed and go live to production environment. </para></listitem><listitem><para> Contracts usually need frequent maintenance, refactoring and versioning. </para></listitem></itemizedlist><para> </para><variablelist><varlistentry><term/><listitem/></varlistentry></variablelist><para>Developers may write contracts first instead. This usually implies an initial collaboration of architects and business analysts to define a conceptual service design together.</para><itemizedlist><listitem><para> Services with contracts obtained this way may easily cooperate in a service oriented architecture </para></listitem><listitem><para> More effort and time required for web service project start-up </para></listitem><listitem><para> Deep knowledge of WSDL and related technology required </para></listitem><listitem><para> Contracts tend to have longer lifespans and usually require less maintenance. </para></listitem></itemizedlist><para> </para></section>
</section>
<section id="JBossWS-Fromconceptstotechnology_Message_exchange"><title>Message exchange</title><para>As stated by the <ulink url="http://www.w3.org/TR/2004/NOTE-ws-arch-20040211/#whatis">W3C definition</ulink>, the communication between web services is standardized by the <ulink url="http://www.w3.org/TR/soap/">SOAP</ulink> specification. This means XML messages flow from the provider and consumer endpoints.</para><para> </para><para>Messages' content is described in the wsdl contract. The WSDL file also states the transport protocol to be used for the transmission; the most common one is of course HTTP, however JMS, SMTP and other ones are allowed.</para><para> </para></section>
<section id="JBossWS-Fromconceptstotechnology_Registries"><title>Registries</title><para>TODO</para><para> </para></section>
<section id="JBossWS-Fromconceptstotechnology_Future_of_Web_Services"><title>Future of Web Services</title><para>The above mentioned specifications are quite common nowadays in the IT industry and many enterprise have been using them since years.</para><para> </para><para>However a real added value to the web service platform is coming from a lot of recent additional specifications. These cover features that are really relevant to deliver mission critical enterprise services. For example some of the most important agreements major vendors came to are those on security (<ulink url="http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=wss">WS-Security</ulink>) and reliable messaging (<ulink url="http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=ws-rx">WS-Reliable Messaging</ulink>).</para><para> </para><para>Unfortunately the web service platform is still being defined and many other specifications have not been implemented by all vendors yet. It is nevertheless important to know from a web service beginner point of view that many advanced features are actually supported and thus make possible to cope with many real world enterprise level issues. Moreover the platform is being continuously enriched and standardized.</para><para> </para></section>
<section id="JBossWS-Fromconceptstotechnology_References"><title>References</title><para>Further knowledge is of course required to better understand the web service technology platform. This however goes beyond the aim of this web service introduction. The highlighted concepts and references above should nevertheless allow developers with no previous exposure to web service technology to go through the core of <ulink url="http://community.jboss.org/docs/DOC-13504">JBossWS documentation</ulink>.</para><para> </para><para>A rich list of specifications and articles can be found <link linkend="chap_JBossWS-Articlesandspecs">here</link> and should be used to acquire deeper knowledge. Moreover the whole documentation refers to authoritative third-party documentation and official specifications whenever required.</para></section>
</chapter>