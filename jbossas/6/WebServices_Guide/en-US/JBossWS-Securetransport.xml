<?xml version="1.0" encoding="UTF-8"?><chapter id="chap_JBossWS-Securetransport"><title>JBossWS-Securetransport</title><para/><para>JBossWS allows you to require that requests to a given endpoint use SSL by specifying the <emphasis>transportGuarantee</emphasis> attribute in the <ulink url="http://community.jboss.org/docs/DOC-13972#WebContext">@WebContext</ulink> annotation.</para><para>Here is an example using a SLSB endpoint:</para><screen xml:space="preserve">@Stateless
@SecurityDomain("JBossWS")
@RolesAllowed("friend")
@WebContext
(
  contextRoot="/my-cxt",
  urlPattern="/*",
  authMethod="BASIC",
  transportGuarantee="CONFIDENTIAL",
  secureWSDLAccess=<emphasis role="bold">false</emphasis>
)
<emphasis role="bold">public</emphasis> <emphasis role="bold">class</emphasis> EndpointEJB <emphasis role="bold">implements</emphasis> EndpointInterface
{
  ...
}
</screen><para>Similarly to enforce the same requirement on POJO endpoints, you need to edit web.xml and add a user-data-constraint element to your security-constraint element:</para><screen xml:space="preserve">  &lt;security-constraint&gt;
    &lt;web-resource-collection&gt;
      &lt;web-resource-name&gt;All resources&lt;/web-resource-name&gt;
      &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/web-resource-collection&gt;
    &lt;auth-constraint&gt;
      &lt;role-name&gt;friend&lt;/role-name&gt;
    &lt;/auth-constraint&gt;
    &lt;user-data-constraint&gt;
      &lt;transport-guarantee&gt;CONFIDENTIAL&lt;/transport-guarantee&gt;
    &lt;/user-data-constraint&gt;
  &lt;/security-constraint&gt;

  &lt;security-role&gt;
    &lt;role-name&gt;friend&lt;/role-name&gt;
  &lt;/security-role&gt;
</screen><para>If you're manually creating your service contract, make sure that the endpoint address in your WSDL file uses a secure protocol. The easiest way is to add "<ulink url="https://">https://</ulink>" to the SOAP Address entry:</para><screen xml:space="preserve">   &lt;service name="MyService"&gt;
    &lt;port name="BasicSecuredPort" binding="tns:MyBinding"&gt;
     &lt;soap:address location="<ulink url="https://localhost:8443/my-ctx/SecureEndpoint">https://localhost:8443/my-ctx/SecureEndpoint</ulink>"/&gt;
    &lt;/port&gt;
   &lt;/service&gt;
</screen><para>For this to work the Tomcat+SSL connector must be enabled:</para><screen xml:space="preserve">   &lt;Connector port="8443" address="${jboss.bind.address}"
        maxThreads="100" minSpareThreads="5" maxSpareThreads="15"
        scheme="https" secure="true" clientAuth="want"
        keystoreFile="${jboss.server.home.dir}/conf/keystores/wsse.keystore" 
        keystorePass="jbossws"
        truststoreFile="${jboss.server.home.dir}/conf/keystores/wsse.keystore" 
        truststorePass="jbossws"
        sslProtocol = "TLS" /&gt;
</screen><para>Please refer the <ulink url="http://tomcat.apache.org/tomcat-5.5-doc/ssl-howto.html">Tomcat-5.5 SSL Configuration HOWTO</ulink> for further details.</para><para> </para><section id="JBossWS-Securetransport_Client_side"><title>Client side</title><para>On the client side the truststore must be installed:</para><screen xml:space="preserve">      &lt;sysproperty key="javax.net.ssl.keyStore" value="${test.resources.dir}/wsse/wsse.keystore"/&gt;
      &lt;sysproperty key="javax.net.ssl.trustStore" value="${test.resources.dir}/wsse/wsse.truststore"/&gt;
      &lt;sysproperty key="javax.net.ssl.keyStorePassword" value="jbossws"/&gt;
      &lt;sysproperty key="javax.net.ssl.trustStorePassword" value="jbossws"/&gt;
      &lt;sysproperty key="javax.net.ssl.keyStoreType" value="jks"/&gt;
      &lt;sysproperty key="javax.net.ssl.trustStoreType" value="jks"/&gt;</screen><para>As you can see, this requires you to setup the environment specifying both the location and type of your truststore.</para><para>Finally, in case you see the following exception:</para><screen xml:space="preserve">  java.io.IOException: HTTPS hostname wrong:  should be &lt;localhost&gt;
    at sun.net.www.protocol.https.HttpsClient.checkURLSpoofing(HttpsClient.java:493)
    at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:418)
</screen><para>you should disable URL checking on the client side:</para><screen xml:space="preserve">   &lt;sysproperty key="org.jboss.security.ignoreHttpsHost" value="true"/&gt;</screen></section>
</chapter>