<?xml version="1.0" encoding="UTF-8"?>
<chapter id="introduction">
   <title>Introduction</title>

   <para>The Java Connector Architecture (JCA) defines a standard architecture for connecting
     the Java EE platform to heterogeneous Enterprise Information Systems (EIS). 
     Examples of EISs include Enterprise Resource Planning (ERP), mainframe transaction processing (TP), 
     databases and messaging systems.</para>

   <para>The connector architecture defines a set of scalable, secure, and transactional
     mechanisms that enable the integration of EISs with application servers and
     enterprise applications.</para>
    
   <para>The connector architecture also defines a Common Client Interface (CCI) for EIS
     access. The CCI defines a client API for interacting with heterogeneous EISs.</para>

   <para>The connector architecture enables an EIS vendor to provide a standard resource
     adapter for its EIS. A resource adapter is a system-level software driver that is used
     by a Java application to connect to an EIS. The resource adapter plugs into an
     application server and provides connectivity between the EIS, the application server,
     and the enterprise application. The resource adapter serves as a protocol adapter
     that allows any arbitrary EIS communication protocol to be used for connectivity.
     An application server vendor extends its system once to support the connector
     architecture and is then assured of seamless connectivity to multiple EISs. Likewise,
     an EIS vendor provides one standard resource adapter which has the capability to
     plug in to any application server that supports the connector architecture.</para>

  <section id="whatsnew">
    <title>What's New</title>

    <para>The Java Connector Architecture 1.6 specification adds the following major areas:</para>

    <itemizedlist spacing="compact">
      <listitem>
        Ease of Development: The use of annotations reduces or completely eliminates the need to deal with a
        deployment descriptor in many cases. The use of annotations also reduces the need
        to keep the deployment descriptor synchronized with changes to source code.
      </listitem>
      <listitem>
        Generic work context contract: A generic contract that enables a resource adapter
        to control the execution context of a Work instance that it has submitted to the
        application server for execution. 
      </listitem>
      <listitem>
        Security work context: A standard contract that enables a resource adapter to
        establish security information while submitting a Work instance for execution to a
        WorkManager and while delivering messages to message endpoints residing in
        the application server.
      </listitem>
      <listitem>
        Standalone Container Environment: A defined set of services that makes up a standalone
        execution environment for resource adapters.
      </listitem>
    </itemizedlist>

  </section>


</chapter>
